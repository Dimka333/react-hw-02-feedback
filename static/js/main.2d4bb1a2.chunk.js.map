{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Sections.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/FeedbackOptions/FeedbackOptions.js","App.js","index.js","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","Section","title","children","className","styles","upSection","Statistics","good","neutral","bad","total","positiveFeedback","statisticsItem","Notification","message","FeedbackOptions","options","handleFeedback","btnCotainer","map","el","id","type","onClick","charAt","toUpperCase","slice","App","state","e","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yKACAA,EAAOC,QAAU,CAAC,eAAiB,qC,+ICgBpBC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtB,OACI,0BAASC,UAAWC,IAAOC,UAA3B,UACI,oBAAIF,UAAWC,IAAOH,MAAtB,SAA8BA,IAC7BC,M,gBCgBEI,EApBI,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,iBAC7C,OACI,+BACE,qBAAIR,UAAWC,IAAOQ,eAAtB,kBAA4CL,KAC5C,qBAAIJ,UAAWC,IAAOQ,eAAtB,qBAA+CJ,KAC/C,qBAAIL,UAAWC,IAAOQ,eAAtB,iBAA2CH,KAC3C,qBAAIN,UAAWC,IAAOQ,eAAtB,mBAA6CF,OAC7C,qBAAIP,UAAWC,IAAOQ,eAAtB,gCAA0DD,IAA1D,WCAKE,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,4BAAIA,K,gBCqBSC,EArBS,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,eAChC,OAEA,qBAAKd,UAAWC,IAAOc,YAAvB,SACGF,EAAQG,KAAI,SAACC,GAAD,OACX,wBACEjB,UAAWC,IAAQgB,GAEnBC,GAAID,EACJE,KAAK,SACLC,QAAS,kBAAMN,EAAeG,IALhC,SAKsCA,EAAGI,OAAO,GAAGC,cAAgBL,EAAGM,MAAM,IAHrEN,SCoDAO,E,4MApDZC,MAAQ,CACCrB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEXQ,eAAiB,SAACY,GAChB,EAAKC,UAAS,SAACC,GAAD,sBACTF,EAAIE,EAAUF,GAAK,O,EAI5BG,mBAAqB,WACjB,OAAQ,EAAKJ,MAAMnB,IAAM,EAAKmB,MAAMrB,KAAO,EAAKqB,MAAMpB,S,EAI1DyB,gCAAkC,WAC9B,IAAMvB,EAAQ,EAAKsB,qBACnB,OAAc,IAAVtB,EACO,EAEJwB,KAAKC,MAAQ,EAAKP,MAAMrB,KAAOG,EAAS,M,4CAGnD,WACE,OAEI,qCACJ,cAAC,EAAD,CAAST,MAAM,wBAAf,SACI,cAAC,EAAD,CACEe,QAAS,CAAC,OAAQ,UAAW,OAC7BC,eAAgBmB,KAAKnB,mBAGvB,cAAC,EAAD,CAAShB,MAAO,aAAhB,SACGmC,KAAKJ,qBACJ,cAAC,EAAD,CACEzB,KAAM6B,KAAKR,MAAMrB,KACjBC,QAAS4B,KAAKR,MAAMpB,QACpBC,IAAK2B,KAAKR,MAAMnB,IAChBC,MAAO0B,KAAKJ,mBACdrB,iBAAkByB,KAAKH,kCAGnB,cAAC,EAAD,CAAcnB,QAAQ,+B,GA7CtBuB,a,YCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCV1B5C,EAAOC,QAAU,CAAC,UAAY,2BAA2B,MAAQ,yB,kBCAjED,EAAOC,QAAU,CAAC,KAAO,8BAA8B,QAAU,iCAAiC,IAAM,gC","file":"static/js/main.2d4bb1a2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsItem\":\"Statistics_statisticsItem__yd679\"};","import PropTypes from 'prop-types';\r\nimport styles from '../Section/Section.module.css'\r\n\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <section className={styles.upSection}>\r\n            <h2 className={styles.title}>{title}</h2>\r\n            {children}\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Section;","import PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css'\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positiveFeedback }) => {\r\n    return (\r\n        <ul>\r\n          <li className={styles.statisticsItem}>Good:{good}</li>\r\n          <li className={styles.statisticsItem}>Neutral:{neutral}</li>\r\n          <li className={styles.statisticsItem}>Bad:{bad}</li>\r\n          <li className={styles.statisticsItem}>Total:{total()}</li>\r\n          <li className={styles.statisticsItem}>Positive feedback: {positiveFeedback()}%</li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.func.isRequired,\r\n  positiveFeedback: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Statistics;","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => (\r\n  <p>{message}</p>\r\n)\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Notification;","import PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css'\r\n\r\nconst FeedbackOptions = ({ options, handleFeedback }) => {\r\n    return (\r\n\r\n    <div className={styles.btnCotainer}>\r\n      {options.map((el) => (\r\n        <button \r\n          className={styles.[el]}\r\n          key={el}\r\n          id={el}\r\n          type='button'\r\n          onClick={() => handleFeedback(el)}>{el.charAt(0).toUpperCase() + el.slice(1)}\r\n        </button>\r\n      ))}\r\n  </div>\r\n)\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  handleFeedback: PropTypes.func.isRequired\r\n};\r\n\r\nexport default FeedbackOptions;","import { Component } from \"react\";\nimport Section from \"./components/Section/Sections\";\nimport Statistics from './components/Statistics'\nimport Notification from './components/Notification'\nimport FeedbackOptions from './components/FeedbackOptions'\n\n\n\n\nclass App extends Component {\n   state = {\n            good: 0,\n            neutral: 0,\n            bad: 0\n  };\n      handleFeedback = (e) => {\n        this.setState((prevState) => ({\n            [e]: prevState[e] + 1,\n        }));\n    }\n    \n    countTotalFeedback = () => {\n        return  this.state.bad + this.state.good + this.state.neutral;\n\n  };\n\n    countPositiveFeedbackPercentage = () => {\n        const total = this.countTotalFeedback();\n        if (total === 0) {\n            return 0;\n        }\n        return Math.round(((this.state.good / total) * 100))\n   }\n    \n    render() {\n      return (\n    \n          <>\n      <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={[\"good\", \"neutral\", \"bad\"]}\n            handleFeedback={this.handleFeedback}\n          />\n            </Section>\n          <Section title= 'Statistics'>\n            {this.countTotalFeedback() ? (\n              <Statistics \n                good={this.state.good}\n                neutral={this.state.neutral}\n                bad={this.state.bad}\n                total={this.countTotalFeedback}\n              positiveFeedback={this.countPositiveFeedbackPercentage}\n              />\n            ) : (\n                  <Notification message=\"No feedback given\" />\n              )}\n     </Section>\n    </>\n  );\n   }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"./styles.css\";\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"upSection\":\"Section_upSection__1hJfD\",\"title\":\"Section_title__2_jBL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"good\":\"FeedbackOptions_good__3i9b2\",\"neutral\":\"FeedbackOptions_neutral__3zMFN\",\"bad\":\"FeedbackOptions_bad__2oJm-\"};"],"sourceRoot":""}