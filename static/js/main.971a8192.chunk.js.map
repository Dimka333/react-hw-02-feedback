{"version":3,"sources":["components/Feedback/Feedback.js","App.js","index.js"],"names":["Feedback","state","good","neutral","bad","handleFeedback","e","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","total","Math","round","type","id","onClick","this","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRA6EeA,E,4MAxEPC,MAAQ,CACJC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGbC,eAAiB,SAACC,GACd,EAAKC,UAAS,SAACC,GAAD,sBACTF,EAAIE,EAAUF,GAAK,O,EA8B5BG,mBAAqB,WACjB,OAAQ,EAAKR,MAAMG,IAAM,EAAKH,MAAMC,KAAO,EAAKD,MAAME,S,EAK1DO,gCAAkC,WAC9B,IAAMC,EAAQ,EAAKF,qBACnB,OAAc,IAAVE,EACO,EAEJC,KAAKC,MAAQ,EAAKZ,MAAMC,KAAOS,EAAS,M,4CAGnD,WAAU,IAAD,OACL,OACI,gCACA,uDACA,wBAAQG,KAAK,SAASC,GAAG,OAAOC,QAAS,kBAAM,EAAKX,eAAe,SAAnE,kBACA,wBAAQS,KAAK,SAASC,GAAG,UAAUC,QAAS,kBAAM,EAAKX,eAAe,YAAtE,qBACA,wBAAQS,KAAK,SAASC,GAAG,MAAMC,QAAS,kBAAM,EAAKX,eAAe,QAAlE,iBAEA,8CACI,sCAASY,KAAKhB,MAAMC,QACpB,yCAAYe,KAAKhB,MAAME,WACvB,qCAAQc,KAAKhB,MAAMG,OACnB,uCAAUa,KAAKR,wBACf,oDAAuBQ,KAAKP,kCAA5B,c,GAlEOQ,aCORC,EANH,kBAEV,cAAC,EAAD,K,YCAFC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.971a8192.chunk.js","sourcesContent":["// import PropTypes from 'prop-types';\r\n\r\nimport { Component } from \"react\";\r\n\r\nclass Feedback extends Component {\r\n        state = {\r\n            good: 0,\r\n            neutral: 0,\r\n            bad: 0\r\n    };\r\n    \r\n    handleFeedback = (e) => {\r\n        this.setState((prevState) => ({\r\n            [e]: prevState[e] + 1,\r\n        }));\r\n    }\r\n    \r\n\r\n\r\n    // handleGoodFeedback = () => {\r\n    //     this.setState((prevState) => {\r\n    //         return {\r\n    //             good: prevState.good + 1,\r\n    //         };\r\n    //     });\r\n    // };\r\n\r\n    // handleNeutralFeedback = () => {\r\n    //     this.setState((prevState) => {\r\n    //         return {\r\n    //             neutral: prevState.neutral + 1,\r\n    //         };\r\n    //     });\r\n    // };\r\n\r\n    // handleBadFeedback = () => {\r\n    //     this.setState((prevState) => {\r\n    //         return {\r\n    //             bad: prevState.bad + 1,\r\n    //         };\r\n    //     });\r\n    // };\r\n\r\n    countTotalFeedback = () => {\r\n        return  this.state.bad + this.state.good + this.state.neutral;\r\n\r\n  };\r\n    \r\n    \r\n    countPositiveFeedbackPercentage = () => {\r\n        const total = this.countTotalFeedback();\r\n        if (total === 0) {\r\n            return 0;\r\n        }\r\n        return Math.round(((this.state.good / total) * 100))\r\n   }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n            <h1>Please leave feedback</h1>\r\n            <button type='button' id='good' onClick={() => this.handleFeedback('good')}>Good</button>\r\n            <button type='button' id='neutral' onClick={() => this.handleFeedback('neutral')}>Neutral</button>\r\n            <button type='button' id='bad' onClick={() => this.handleFeedback('bad')}>bad</button>\r\n            \r\n            <span>Statistics</span>\r\n                <p>Good:{this.state.good}</p>\r\n                <p>Neutral:{this.state.neutral}</p>\r\n                <p>Bad:{this.state.bad}</p>\r\n                <p>Total:{this.countTotalFeedback()}</p>\r\n                <p>Positive feedback: {this.countPositiveFeedbackPercentage()}%</p>\r\n                </div>\r\n       )\r\n   }\r\n  }\r\n\r\n\r\nexport default Feedback;","import Feedback from './components/Feedback'\n\n\n\n\nconst App = () => (\n  \n  <Feedback/>\n  \n)\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"./styles.css\";\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}